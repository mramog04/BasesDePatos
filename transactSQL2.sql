CREATE DATABASE ZooDatabase;
GO

USE ZooDatabase;
GO

CREATE TABLE TICKETS (
    TICKET_ID INT PRIMARY KEY,
    DNI VARCHAR(9) NOT NULL,
    PRICE DECIMAL(5,2) NOT NULL DEFAULT 15.00,
    DATESTARTVALIDITY DATE NOT NULL,
    DATEENDVALIDITY DATE NOT NULL
);

CREATE TABLE ACCOUNTS (
    ACCOUNTID INT PRIMARY KEY,
    EMAIL VARCHAR(50) NOT NULL,
    USERNAME VARCHAR(50) NOT NULL,
    BIRTHDATE DATE NOT NULL CHECK (BIRTHDATE >= '2007-01-01'),
    LANGUAGE NVARCHAR(20) NOT NULL
);

CREATE TABLE DISCOUNTS (
    DISCOUNTID INT PRIMARY KEY,
    DISCOUNTNAME VARCHAR(50) NOT NULL,
    PERCENTAGE INT NOT NULL DEFAULT 20 CHECK (PERCENTAGE >= 5),
);

CREATE TABLE CONTRACTS (
    CONTRACTID INT PRIMARY KEY,
    STARTDATE DATE NOT NULL,
    FINISHDATE DATE NOT NULL,
    BASESSALARY DECIMAL(6,2) NOT NULL DEFAULT 10,
    EXTRA_PERCENT INT NOT NULL DEFAULT 50,
    HOURS INT NOT NULL,
    BANKACCOUNT VARCHAR(24) NOT NULL
);

CREATE TABLE SECTIONS (
    SECTIONID INT PRIMARY KEY,
    SECTIONNAME VARCHAR(100) NOT NULL,
    DIMENSION INT NOT NULL,
    PHONENUMBER INT NOT NULL,
    FILLNAME NVARCHAR(100) NOT NULL
);

CREATE TABLE PRODUCTS (
    PRODUCTID INT PRIMARY KEY,
    PRODUCTNAME VARCHAR(100) NOT NULL,
    PRICE DECIMAL(5,2) NOT NULL DEFAULT 10.00 CHECK (PRICE <= 100.00),
    EXPIRATIONDATE DATE
);


CREATE TABLE ANIMALS (
    ANIMALID INT PRIMARY KEY,
    NICKNAME VARCHAR(50) NOT NULL,
    SPECIES VARCHAR(100) NOT NULL,
    SEX CHAR(1) NOT NULL,
    WIGHT DECIMAL(7,2) NOT NULL,
    BIRTHDATE DATE NOT NULL,
    TIMEATTHEZOO INT NOT NULL,
    MORNINGFOOD VARCHAR(100),
    NIGTHFOOD VARCHAR(100),
    MEDICINE VARCHAR(100),
    DATEOFARRIVAL DATE NOT NULL
);

CREATE TABLE VIPPASSES (
    TICKET_ID INT PRIMARY KEY NOT NULL,
);

CREATE TABLE PAYMENTMETHODS (
    ACCOUNTID INT PRIMARY KEY,
    PAYMENTMETHOD VARCHAR(20) NOT NULL,
);

CREATE TABLE DAYS (
    CONTRACTID INT PRIMARY KEY NOT NULL,
    DAYS VARCHAR(20) NOT NULL,
);

CREATE TABLE SHOPS (
    SHOPID INT PRIMARY KEY,
    SHOPNAME VARCHAR(100) NOT NULL,
    SECTIONID INT,
);

CREATE TABLE ENCLOSURES (
    ENCLOSUREID CHAR(5) PRIMARY KEY,
    SPECIES VARCHAR(200),
    ENCLOSUREFLOORMATERIAL INT NOT NULL,
    DATELASTINSPECTION DATE,
    DATENEXTINSPECTION DATE NOT NULL,
    SQUAREMETERS INT NOT NULL CHECK (SQUAREMETERS >= 5),
    SECURITYLEVEL INT NOT NULL,
    TEMPERATURE INT NOT NULL CHECK (TEMPERATURE >= -10 AND TEMPERATURE <= 40),
    ELECTRICALEXPENSE INT NOT NULL,
    ENVIROMENT VARCHAR(50) NOT NULL,
    HASSHOW BIT NOT NULL DEFAULT 0,
    SECTIONID INT,
);

CREATE TABLE EMERGENCYCONTACTS (
    DNI VARCHAR(9) PRIMARY KEY,
    PHONENUMBER INT NOT NULL,
    FULLNAME VARCHAR(100) NOT NULL,
);

CREATE TABLE EMPLOYEES (
    EMPLOYEEID INT PRIMARY KEY,
    DNI VARCHAR(9) NOT NULL,
    FIRSTNAME VARCHAR(100) NOT NULL,
    LASTNAME VARCHAR(100) NOT NULL, 
    GENDER CHAR(1) NOT NULL,
    DATEFIRSTCONTRACT DATE NOT NULL,
    BIRTHDATE DATE NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    TELEPHONENUMBER INT NOT NULL,
    ADRESSSTREES VARCHAR(100) NOT NULL,
    ADRESSLOCATION VARCHAR(100) NOT NULL,
    CONTACTDNI VARCHAR(9) NOT NULL,
);



CREATE TABLE PARENTS (
    ANIMALID INT PRIMARY KEY,
    PARENTID INT,
);

CREATE TABLE ILLNESES (
    ANIMALID INT PRIMARY KEY,
    ILLNESSES VARCHAR(100) NOT NULL,
);

CREATE TABLE ROUTES (
    ROUTEID INT PRIMARY KEY,
    ROUTENAME VARCHAR(100) NOT NULL,
    ESTIMATEDLENGTHTIME INT NOT NULL DEFAULT 60 CHECK (ESTIMATEDLENGTHTIME>=15 AND ESTIMATEDLENGTHTIME <= 90),
    STARTHOUR DATE NOT NULL CHECK (STARTHOUR >= '10:00' AND STARTHOUR <= '18:00'),
    SECTIONID INT,
);

CREATE TABLE ENCLOSUREITEMS (
    ENCLOSUREITEMID INT PRIMARY KEY,
    NOMBRE VARCHAR(100) NOT NULL,
    ENCLOSUREID CHAR(5),
);

CREATE TABLE SHOPRO (
    SHOPID INT,
    PRODUCTID INT,
    PRIMARY KEY (SHOPID, PRODUCTID),
);

CREATE TABLE LANGUAGES (
    EMPLOYEEID INT PRIMARY KEY,
    LANGUAGES VARCHAR(20) NOT NULL,
);

CREATE TABLE SECURITYEMPLOYEES (
    EMPLOYEEID INT PRIMARY KEY,
    SHIFT VARCHAR(20) NOT NULL,
    EXTRAHOURES INT NOT NULL DEFAULT '0',
);

CREATE TABLE STRUCTURALEMPLOYEES (
    EMPLOYEEID INT PRIMARY KEY,
    SHIFT VARCHAR(20) NOT NULL,
    EXTRAHOURES INT NOT NULL,
);

CREATE TABLE ANIMALEMPLOYEES (
    EMPLOYEEID INT PRIMARY KEY,
);

CREATE TABLE GUARD (
    EMPLOYEEID INT PRIMARY KEY,
    RANK VARCHAR(20) NOT NULL,
);

CREATE TABLE ACCTIC (
    TICKET_ID INT NOT NULL,
    ACCOUNTID INT NOT NULL,
    DISCOUNTID INT NOT NULL,
    PRIMARY KEY (TICKET_ID, ACCOUNTID, DISCOUNTID)
);

CREATE TABLE SHOPROSEC (
    SHOPID INT,
    PRODUCTID INT,
    SECTIONID INT,
    PRIMARY KEY (SHOPID, PRODUCTID, SECTIONID),
);

CREATE TABLE ENCANI (
    ENCLOSUREID CHAR(5) PRIMARY KEY,
    SPECIES VARCHAR(100) NOT NULL,
    POPULATION INT NOT NULL CHECK (POPULATION <= 15),
    ANIMALID INT,
);

CREATE TABLE SURVEILLANCE (
    EMPLOYEEID INT PRIMARY KEY,
);

CREATE TABLE CLEANER (
    EMPLOYEEID INT PRIMARY KEY,
);

CREATE TABLE SHOPKEEPRS (
    EMPLOYEEID INT PRIMARY KEY,
    SHOPID INT,
);

CREATE TABLE TICKETSELLERS (
    EMPLOYEEID INT PRIMARY KEY,
    CONSTRAINT FK_TICKETSELLERS FOREIGN KEY (EMPLOYEEID) REFERENCES STRUCTURALEMPLOYEES(EMPLOYEEID)
);

CREATE TABLE INSPECTORS (
    EMPLOYEEID INT PRIMARY KEY,
    CONSTRAINT FK_INSPECTORS FOREIGN KEY (EMPLOYEEID) REFERENCES STRUCTURALEMPLOYEES(EMPLOYEEID)
);

CREATE TABLE CARETAKERS (
    EMPLOYEEID INT PRIMARY KEY,
    CONSTRAINT FK_CARETAKERS FOREIGN KEY (EMPLOYEEID) REFERENCES ANIMALEMPLOYEES(EMPLOYEEID)
);

CREATE TABLE VETERINARIES (
	EMPLOYEEID INT PRIMARY KEY,
	CONSTRAINT FK_VETERINARIES FOREIGN KEY (EMPLOYEEID) REFERENCES ANIMALEMPLOYEES(EMPLOYEEID)
);

CREATE TABLE GUIDEDENTRIES (
    TICKET_ID INT PRIMARY KEY NOT NULL,
    ROUTES_ID INT NOT NULL,
);

CREATE TABLE EMPCON (
    EMPLOYEEID INT NOT NULL,
    CONTRACTID INT NOT NULL,
    BONUSPAY DECIMAL(6,2) NOT NULL DEFAULT '0.00',
    EXTRAHOURESPAY INT NOT NULL,
    PRIMARY KEY (EMPLOYEEID, CONTRACTID)
);

CREATE TABLE SECGUA (
    EMPLOYEEID INT,
    SECTIONID INT,
    ACCIDENTDATE DATE NOT NULL,
    ACCIDENTCOST INT NOT NULL,
    PRIMARY KEY (EMPLOYEEID, SECTIONID)
);

CREATE TABLE WEAPONLICENCES (
    WEAPONLICENCEID INT PRIMARY KEY,
    EMPLOYEEID INT,
    WEAPONNAME VARCHAR(20) NOT NULL,
);

CREATE TABLE WEAPON (
    WEAPONID INT PRIMARY KEY,
    WEAPONLICENCESID INT,
);

CREATE TABLE SECSUR (
    EMPLOYEEID INT,
    SECTIONID INT,
    ACCIDENTDATE DATE NOT NULL,
    ACCIDENTCOST INT NOT NULL,
    PRIMARY KEY (EMPLOYEEID, SECTIONID)
);

CREATE TABLE SECCLEA (
    EMPLOYEEID INT, 
    SECTIONID INT,
    ACCIDENTDATE DATE NOT NULL,
    ACCIDENTCOST INT NOT NULL,
    PRIMARY KEY (EMPLOYEEID, SECTIONID)
);

CREATE TABLE ANIVET (
    INTERVETIONID INT PRIMARY KEY,
    ANIMALID INT,
    EMPLOYEEID INT,
    COSTOFTREATMENT INT NOT NULL,
);

CREATE TABLE STUDIES (
    EMPLOYEEID INT,
    STUDIES VARCHAR(100) NOT NULL,
);

CREATE TABLE GUIROU (
    ROUTESID INT,
    EMPLOYEEID INT,
    PRIMARY KEY (ROUTESID, EMPLOYEEID)
);

CREATE TABLE ENCINS (
    ENCLOSUREID CHAR(5),
    EMPLOYEEID INT,
    DATENEXTINSPECTION DATE NOT NULL,
    DATELASTINSPECTION DATE NOT NULL,
    PRIMARY KEY (ENCLOSUREID, EMPLOYEEID)
);

CREATE TABLE ENCCAR (
    ENCLOSUREID CHAR(5),
    EMPLOYEEID INT,
    PRIMARY KEY (ENCLOSUREID, EMPLOYEEID)
);

CREATE TABLE SPECIES (
    ENCLOSUREID CHAR(5) PRIMARY KEY,
    SPECIES VARCHAR(100) NOT NULL,
);
GO

ALTER TABLE SHOPS ADD CONSTRAINT FK_SHOPSECTION foreign key (SectionID) REFERENCES SECTIONS(SectionID);

ALTER TABLE ENCLOSURES ADD CONSTRAINT FK_ENCLOSURESECTION FOREIGN KEY (SectionID) REFERENCES SECTIONS(SectionID);

ALTER TABLE EMPLOYEES ADD CONSTRAINT FK_CONTACTEMPLOYEE FOREIGN KEY (ContactDNI) REFERENCES EMERGENCYCONTACTS(DNI);

ALTER TABLE PARENTS ADD CONSTRAINT FK_PARENTS1 FOREIGN KEY (AnimalID) REFERENCES ANIMALS(AnimalID);

ALTER TABLE PARENTS ADD CONSTRAINT FK_PARENTS2 FOREIGN KEY (ParentID) REFERENCES ANIMALS(AnimalID);

ALTER TABLE ILLNESSES ADD CONSTRAINT FK_ILLNESSES FOREIGN KEY (AnimalId) REFERENCES ANIMALS(AnimalID);

ALTER TABLE ROUTES ADD CONSTRAINT FK_ROUTESSECTION FOREIGN KEY (SectionID) REFERENCES SECTIONS(SectionID);

ALTER TABLE ENCLOSUREITEMS ADD CONSTRAINT FK_ENCLOSUREITEMENCLOSURE FOREIGN KEY (EnclosureID) REFERENCES ENCLOSURES(EnclosureID);

ALTER TABLE SHOPRO ADD CONSTRAINT FK_SHOP FOREIGN KEY (ShopID) REFERENCES SHOPS(ShopID);

ALTER TABLE SHOPRO ADD CONSTRAINT FK_PRODUCT FOREIGN KEY (ProductID) REFERENCES PRODUCTS(ProductID);

ALTER TABLE STRUCTURALEMPLOYEES ADD CONSTRAINT FK_EMPLOYEESTRCUTURAL FOREIGN KEY (EmployeeID) REFERENCES EMPLOYEES(EmployeeID);

ALTER TABLE ANIMALEMPLOYEES ADD CONSTRAINT FK_EMPLOYEEANIMAL FOREIGN KEY (EmployeeID) REFERENCES EMPLOYEES(EmployeeID);

ALTER TABLE GUARD ADD CONSTRAINT FK_EMPLOYEEGUARD FOREIGN KEY (EmployeeID) REFERENCES SECURITYEMPLOYEES(EmployeeID);

ALTER TABLE ACCTIC ADD CONSTRAINT FK_TICKET FOREIGN KEY (TICKET_ID) REFERENCES TICKETS(TICKET_ID);

ALTER TABLE ACCTIC ADD CONSTRAINT FK_ACCOUNT FOREIGN KEY (ACCOUNTID) REFERENCES ACCOUNTS(ACCOUNTID);

ALTER TABLE SHOPROSEC ADD CONSTRAINT FK_SHOPRO FOREIGN KEY (ShopID, ProductID) REFERENCES SHOPRO(ShopID, ProductID);

ALTER TABLE SHOPROSEC ADD CONSTRAINT FK_SECTION FOREIGN KEY (SectionID) REFERENCES SECTIONS(SectionID);

ALTER TABLE ENCANI ADD CONSTRAINT FK_ENCLOSUREENCANI FOREIGN KEY (EnclosureID) REFERENCES ENCLOSURES(EnclosureID);

ALTER TABLE ENCANI ADD CONSTRAINT FK_ANIMALENCANI FOREIGN KEY (AnimalID) REFERENCES ANIMALS(AnimalID);

ALTER TABLE SURVEILLANCE ADD CONSTRAINT FK_EMPLOYEESURVILLANCE FOREIGN KEY (EmployeeID) REFERENCES GUARD(EmployeeID);

ALTER TABLE CLEANER ADD CONSTRAINT FK_EMPLOYEECLEANER FOREIGN KEY (EmployeeID) REFERENCES STRUCTURALEMPLOYEES(EmployeeID);

ALTER TABLE SHOPKEEPERS ADD CONSTRAINT FK_EMPLOYEESHOPKEEPER FOREIGN KEY (EmployeeID) REFERENCES STRUCTURALEMPLOYEES(EmployeeID);

ALTER TABLE SHOPKEEPERS ADD CONSTRAINT FK_SHOPSHOPKEEPER FOREIGN KEY (ShopID) REFERENCES SHOPS(ShopID);

ALTER TABLE TICKETSELLERS ADD CONSTRAINT FK_EMPLOYEETICKETSELLER FOREIGN KEY  (EmployeeID) REFERENCES STRUCTURALEMPLOYEES(EmployeeID);

ALTER TABLE INSPECTORS ADD CONSTRAINT FK_EMPLOYEEINSPECTOR FOREIGN KEY (EmployeeID) REFERENCES STRUCTURALEMPLOYEES(EmployeeID);

ALTER TABLE CARETAKERS ADD CONSTRAINT FK_EMPLOYEECARETAKER FOREIGN KEY (EmployeeId) REFERENCES ANIMALEMPLOYEES(EmployeeID);

ALTER TABLE GUIDEDENTRIES ADD CONSTRAINT FK_GUIDEDTICKET FOREIGN KEY (TICKET_ID) REFERENCES TICKETS(TICKET_ID);

ALTER TABLE GUIDEDENTRIES ADD CONSTRAINT FK_GUIDEDROUTE FOREIGN KEY (ROUTES_ID) REFERENCES ROUTES(RouteID);

ALTER TABLE EMPCON ADD CONSTRAINT FK_EMPLOYEEEMPCON FOREIGN KEY (EMPLOYEEID) REFERENCES EMPLOYEES(EMPLOYEEID);

ALTER TABLE EMPCON ADD CONSTRAINT FK_CONTRACTEMPCON FOREIGN KEY (CONTRACTID) REFERENCES CONTRACTS(CONTRACTID);

ALTER TABLE SECGUA ADD CONSTRAINT FK_EMPLOYEESECGUA FOREIGN KEY (EmployeeId) REFERENCES SECURITYEMPLOYEES(EmployeeID);

ALTER TABLE SECGUA ADD CONSTRAINT FK_SECTIONSECGUA FOREIGN KEY (SectionID) REFERENCES SECTIONS(SectionID);

ALTER TABLE WEAPONLICENCES ADD CONSTRAINT FK_EMPLOYEEWEAPON FOREIGN KEY (EmployeeID) REFERENCES SECURITYEMPLOYEES(EmployeeID);

ALTER TABLE WEAPON ADD CONSTRAINT FK_WEAPONWEAPONLICENCE FOREIGN KEY (WeaponLicencesID) REFERENCES WEAPONLICENCES(WeaponLicencesID);

ALTER TABLE SECSUR ADD CONSTRAINT FK_EMPLOYEESECSUR FOREIGN KEY (EmployeeID) REFERENCES SECURITYEMPLOYEES(EmployeeID);

ALTER TABLE SECSUR ADD CONSTRAINT FK_SECTIONSECSUR FOREIGN KEY (SectionID) REFERENCES SECTIONS(SectionID);

ALTER TABLE SECCLEA ADD CONSTRAINT FK_EMPLOYEESECCLEA FOREIGN KEY (EmployeeID) REFERENCES SECURITYEMPLOYEES(EmployeeID);

ALTER TABLE SECCLEA ADD CONSTRAINT FK_SECTIONSECCLEAR FOREIGN KEY (SectionID) REFERENCES SECTIONS(SectionID);

ALTER TABLE ANIVET ADD CONSTRAINT FK_EMPLOYEEANIVET FOREIGN KEY (EmployeeID) REFERENCES VETERINARIES(EmployeeID);

ALTER TABLE ANIVET ADD CONSTRAINT FK_ANIMALANIVET FOREIGN KEY (AnimalID) REFERENCES ANIMALS(AnimalID);

ALTER TABLE STUDIES ADD CONSTRAINT FK_EMPLOYEESTUDIES FOREIGN KEY (EmployeeID) REFERENCES VETERINARIES(EmployeeID);

ALTER TABLE GUIROU ADD CONSTRAINT FK_EMPLOYEEGUIROU FOREIGN KEY (EmployeeID) REFERENCES EMPLOYEES(EmployeeID);

ALTER TABLE GUIROU ADD CONSTRAINT FK_ROUTEGUIROU FOREIGN KEY (RouteID) REFERENCES ROUTES(RouteID);

ALTER TABLE ENCINS ADD CONSTRAINT FK_EMPLOYEEENCINS FOREIGN KEY (EmployeeID) REFERENCES INSPECTORS(EmployeeID);

ALTER TABLE ENCINS ADD CONSTRAINT FK_ENCLOSUREENCINS FOREIGN KEY (EnclosureID) REFERENCES ENCLOSURES(EnclosureID);

ALTER TABLE ENCCAR ADD CONSTRAINT FK_EMPLOYEEENCCAR FOREIGN KEY (EmployeeId) REFERENCES CARETAKERS(EmployeeID);

ALTER TABLE ENCCAR ADD CONSTRAINT FK_ENCLOSUREENCCAR FOREIGN KEY (EnclosureID) REFERENCES ENCLOSURES(EnclosureID);

ALTER TABLE SPECIES ADD CONSTRAINT FK_ENCLOSURESPECIES FOREIGN KEY (EnclosureID) REFERENCES ENCLOSURES(EnclosureID);

ALTER TABLE VIPPASSES ADD CONSTRAINT FK_TICKETVIPPASS FOREIGN KEY (TICKET_ID) REFERENCES TICKETS(TICKET_ID);

ALTER TABLE PAYMENTMETHODS ADD CONSTRAINT FK_ACCOUNTPAYMENTMETHOD FOREIGN KEY (ACCOUNTID) REFERENCES ACCOUNTS(ACCOUNTID);

ALTER TABLE DAYS ADD CONSTRAINT FK_CONTRACTDAYS FOREIGN KEY (CONTRACTID) REFERENCES CONTRACTS(CONTRACTID);
GO;